#libraries and installs
#install.packages("cfbfastR")
library(cfbfastR)
library(dplyr)
#Use API Key
Sys.setenv(CFBD_API_KEY = "+qVRXH8S2h094wGSnY0PKcNnF8WR8WyEeMPsKWWezwy9PFyw2NWYAQM8PjC5+csU")
cfbd_recruiting_player(2020, recruit_type = "HighSchool")
cfbd_recruiting_player(2012, recruit_type = "HighSchool")
cfbd_recruiting_player(recruit_type = "HighSchool")
#libraries and installs
#install.packages("cfbfastR")
library(cfbfastR)
library(dplyr)
#API Instructions
?register_cfbd
#Use API Key
Sys.setenv(CFBD_API_KEY = "+qVRXH8S2h094wGSnY0PKcNnF8WR8WyEeMPsKWWezwy9PFyw2NWYAQM8PjC5+csU")
#2020 Recruiting Pull Test
cfbd_recruiting_player(2020, recruit_type = "HighSchool")
install.packages("purrr")
install.packages("purrr")
#install.packages("purrr")
library(purrr)
recruiting_data <- map_dfr(years, cfbd_recruiting_player(years, recruit_type = "HighSchool"))
years <- c(2012, 2013, 2014, 2015, 2016, 2017,
2018, 2019)
recruiting_data <- map_dfr(years, cfbd_recruiting_player(years, recruit_type = "HighSchool"))
recruiting_data <- map_dfr(years) {cfbd_recruiting_player(years, recruit_type = "HighSchool")}
#pull recruiting data using map_dfr
recruiting_data <- map_dfr(years, {cfbd_recruiting_player(years, recruit_type = "HighSchool")})
library(cfbfastR)
library(dplyr)
#install.packages("purrr")
library(purrr)
Sys.setenv(CFBD_API_KEY = "+qVRXH8S2h094wGSnY0PKcNnF8WR8WyEeMPsKWWezwy9PFyw2NWYAQM8PjC5+csU")
#2020 Recruiting Pull Test
cfbd_recruiting_player(2020, recruit_type = "HighSchool")
map_dfr(years, {cfbd_recruiting_player(years, recruit_type = "HighSchool")})
recruiting_data <- map_dfr(years, cfbd_recruiting_player(years, recruit_type = "HighSchool"))
#pull recruiting data using map_dfr
#check out Collibra api code
recruiting_data <- map_dfr(years, cfbd_recruiting_player(.X, recruit_type = "HighSchool"))
recruiting_pull_function <- function(year) {
cfbd_recruiting_player(year, recruit_type = "HighSchool")
}
recruiting_data <- map_dfr(years, recruiting_pull_function)
View(recruiting_data)
recruiting_data <- map_dfr(years, recruiting_pull_function) %>%
filter(ranking < 301)
recruiting_data <- map_dfr(years, recruiting_pull_function) %>%
filter(ranking < 301) %>%
group_by(state_province, year) %>%
summarise(player_count = count(athlete_id))
recruiting_data <- map_dfr(years, recruiting_pull_function) %>%
filter(ranking < 301) %>%
group_by(state_province, year) %>%
summarise(player_count = sum(athlete_id))
recruiting_data <- map_dfr(years, recruiting_pull_function) %>%
filter(ranking < 301) %>%
group_by(state_province, year) %>%
summarize(player_count = sum(athlete_id))
recruiting_data <- map_dfr(years, recruiting_pull_function) %>%
filter(ranking < 301) %>%
group_by(state_province, year) %>%
summarize(player_count = count(case_when(is.na(athlete_id)==FALSE ~ 1)))
recruiting_data <- map_dfr(years, recruiting_pull_function) %>%
filter(ranking < 301) %>%
group_by(state_province, year) %>%
summarize(player_count = count(case_when(is.na(athlete_id)==FALSE ~ 1,
is.na(athlete_id)==TRUE ~ 0)))
recruiting_data <- map_dfr(years, recruiting_pull_function) %>%
filter(ranking < 301) %>%
group_by(state_province, year)
View(recruiting_data)
recruiting_data <- map_dfr(years, recruiting_pull_function) %>%
filter(ranking < 301) %>%
count(state_province, year)
View(recruiting_data)
#load packages
library(dplyr)
#install.packages('rvest')
library(rvest)
#install.packages('xml2')
library(xml2)
#install.packages('janitor')
library(janitor)
#install.packages('stringr')
library(stringr)
library(purrr)
base_url <- "http://www.spotrac.com/nfl/"
read.base <- read_html(base_url)
team.URL <- read.base %>% html_nodes(".team-name") %>% html_attr('href')
team.URL
team.names <- gsub("/cap/","", gsub(base_url, "", team.URL))
data.creator <- function(link) {
read_html(link) %>% html_nodes("table") %>% html_table(header=TRUE, fill=TRUE) -> res
names(res) <- c("Active","Draft","Inactive","Team1")
return(res)
}
team.names <- gsub("-", " ", team.names)
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
team.names <- sapply(team.names, simpleCap)
NFL.scrape <- sapply(team.URL, function(x) {data.creator(x)})
names(NFL.scrape) <- team.names
Actives <- lapply(NFL.scrape, function(x){x$Active})
rep.res <- sapply(seq(1,32), function(x) {dim(Actives[[x]])[[1]]})
clean.me.2 <- function(data) {
data %>% str_remove_all("[\\t]") %>% str_split("\\n\\n\\n") %>% unlist() %>% matrix(data=., ncol=2, byrow=TRUE) -> dat
return(dat)
}
clean.me <- function(data) {
str_remove_all(data, "[\\t]")
}
clean.me.num <- function(data) {
str_remove_all(data, "[\\$,()\\-]")
}
Players <- lapply(Actives, function(x){ clean.me.2(x[,1])})
View(Actives)
Actives[["Https://www.spotrac.com/nfl/arizona Cardinals"]][["Active Players (88)"]]
View(Players)
Players[["Https://www.spotrac.com/nfl/arizona Cardinals"]]
extract_name <- function(string) {
# Split the string based on newline characters and tabs
parts <- unlist(strsplit(string, "\n\t+"))
# Extract the last non-empty element, which contains the name
name <- tail(na.omit(parts), 1)
# Remove leading and trailing whitespaces
name <- trimws(name)
return(name)
}
Players <- lapply(Actives, function(x){ extract_name(x[,1])})
Players <- lapply(Actives, extract_name(Actives[,1]))
Players <- apply(Actives, function(sub_list) {
first_list <- sub_list[[1]]
extract_name(first_list)
})
Players <- lapply(Actives, function(sub_list) {
first_list <- sub_list[[1]]
extract_name(first_list)
})
View(Players)
Players[["Https://www.spotrac.com/nfl/arizona Cardinals"]]
View(Actives)
Actives[["Https://www.spotrac.com/nfl/arizona Cardinals"]][["Active Players (88)"]]
Actives[1]
Players <- lapply(Actives, function(x){ clean.me.2(x[,1])})
View(Players)
Players[["Https://www.spotrac.com/nfl/arizona Cardinals"]]
clean.me.2 <- function(string) {
# Split the string based on newline characters and tabs
parts <- unlist(strsplit(string, "\n\t+"))
# Extract the last non-empty element, which contains the name
name <- tail(na.omit(parts), 1)
# Remove leading and trailing whitespaces
name <- trimws(name)
return(name)
}
Players <- lapply(Actives, function(x){ clean.me.2(x[,1])})
clean.me.2 <- function(string) {
# Split the string based on newline characters and tabs
parts <- unlist(strsplit(as.character(string), "\n\t+"))
# Extract the last non-empty element, which contains the name
name <- tail(na.omit(parts), 1)
# Remove leading and trailing whitespaces
name <- trimws(name)
return(name)
}
Players <- lapply(Actives, function(x){ clean.me.2(x[,1])})
View(Players)
Players[["Https://www.spotrac.com/nfl/arizona Cardinals"]]
clean.me.2 <- function(string) {
# Split the string based on newline characters and tabs
parts <- unlist(strsplit(as.character(string), "\n\t+"))
# Extract the last non-empty element, which contains the name
name <- tail(na.omit(parts), 1)
# Remove leading and trailing whitespaces
name <- trimws(name)
return(name)
}
Players <- lapply(Actives, function(x){ clean.me.2(x[,1])})
View(Players)
Players[["Https://www.spotrac.com/nfl/arizona Cardinals"]]
View(Actives)
clean.me.2 <- extract_name <- function(string) {
# Remove backslashes and any extra whitespaces
cleaned_string <- gsub("\\\\", "", string)
cleaned_string <- gsub("\n", "", cleaned_string)
cleaned_string <- gsub("\t", "", cleaned_string)
# Extract the last non-empty element, which contains the name
name <- tail(na.omit(strsplit(cleaned_string, " ")), 1)
return(name)
}
Players <- lapply(Actives, function(x){ clean.me.2(x[,1])})
Players[["Https://www.spotrac.com/nfl/arizona Cardinals"]]
clean.me.2 <- extract_name <- function(string) {
# Remove backslashes, tabs, and leading/trailing whitespace
cleaned_string <- gsub("\\\\|\\t", "", string)
cleaned_string <- trimws(cleaned_string)
# Extract the name by splitting on multiple spaces
name <- strsplit(cleaned_string, "\\s+")[[1]][1]
return(name)
}
Players <- lapply(Actives, function(x){ clean.me.2(x[,1])})
Players[["Https://www.spotrac.com/nfl/arizona Cardinals"]]
clean.me.2 <- extract_name <- function(string) {
# Remove backslashes, tabs, and leading/trailing whitespace
cleaned_string <- gsub("\\\\|\\t", "", string)
cleaned_string <- trimws(cleaned_string)
# Extract the name by splitting on multiple spaces
name <- strsplit(cleaned_string, "\\s+")[[1]]
return(name)
}
Players <- lapply(Actives, function(x){ clean.me.2(x[,1])})
Actives[["Https://www.spotrac.com/nfl/arizona Cardinals"]][["Active Players (88)"]]
clean.me.2 <- function(string) {
# Remove backslashes, tabs, and leading/trailing whitespace
cleaned_string <- gsub("\\\\|\\t", "", string)
cleaned_string <- trimws(cleaned_string)
# Extract the last name and full name by splitting on spaces
names_parts <- strsplit(cleaned_string, "\\s+")[[1]]
last_name <- names_parts[1]
full_name <- paste(names_parts[-1], collapse = " ")
# Combine last name and full name
name <- paste(last_name, full_name, sep = " ")
return(name)
}
Players <- lapply(Actives, function(x){ clean.me.2(x[,1])})
Players[["Https://www.spotrac.com/nfl/arizona Cardinals"]]
clean.me.2 <- function(string) {
# Remove backslashes, tabs, and leading/trailing whitespace
cleaned_string <- gsub("\\\\|\\t", "", string)
cleaned_string <- trimws(cleaned_string)
# Split the cleaned string into parts based on newline characters
parts <- unlist(strsplit(cleaned_string, "\n"))
# Extract the last part, which contains the full name
full_name <- tail(na.omit(parts), 1)
return(full_name)
}
Players <- lapply(Actives, function(x){ clean.me.2(x[,1])})
Players[["Https://www.spotrac.com/nfl/arizona Cardinals"]]
Actives[["Https://www.spotrac.com/nfl/arizona Cardinals"]][["Active Players (88)"]]
#cardinals testing
az <- Actives[1][1]
#cardinals testing
az <- Actives[1][1]$`Active Players (88)`
#cardinals testing
az <- Actives[1][1]
az_players <- az$`Https://www.spotrac.com/nfl/arizona Cardinals`
View(az_players)
#cardinals testing
az <- Actives[1][1][1]
View(az)
az <- unlist(Actives[1][1])
az <- data.frame(Actives[1][1])
View(az)
az <- data.frame(Actives[1])
View(az)
az <- do.call(rbind, lapply(names(Actives), function(sublist_name) {
data.frame(Sublist = sublist_name, Actives[[sublist_name]], row.names = NULL)
}))
az <- bind_rows(lapply(names(Actives), function(sublist_name) {
data.frame(Sublist = sublist_name, Actives[[sublist_name]], row.names = NULL)
}))
View(az)
#NFL Player data frame
nfl_player_data <- bind_rows(lapply(names(Actives), function(sublist_name) {
data.frame(Sublist = sublist_name, Actives[[sublist_name]], row.names = NULL)
}))
View(nfl_player_data)
#NFL Player data frame
nfl_player_data <- bind_rows(lapply(names(Actives), function(sublist_name) {
data.frame(Sublist = sublist_name, Actives[[sublist_name]], row.names = NULL)
})) %>% select(Sublist) %>% distinct()
View(nfl_player_data)
#NFL Player data frame
nfl_player_data <- bind_rows(lapply(names(Actives), function(sublist_name) {
data.frame(Sublist = sublist_name, Actives[[sublist_name]], row.names = NULL)
}))
#NFL Player data frame
nfl_player_data <- bind_rows(lapply(names(Actives), function(sublist_name) {
data.frame(Sublist = sublist_name, Actives[[sublist_name]], row.names = NULL)
})) %>% mutate(player_name = gsub("^[^[:space:]]+\\s+", "", Active.Players..88.))
qb <- nfl_player_data %>%
filter(Pos. == 'QB')
View(qb)
nfl_player_data <- bind_rows(lapply(names(Actives), function(sublist_name) {
data.frame(Sublist = sublist_name, Actives[[sublist_name]], row.names = NULL)})) %>%
mutate(name = ifelse(is.na(Active.Players..88.)==FALSE, Active.Players..88.,
ifelse(is.na(Active.Players..32.) == FALSE, Active.Players..32.,
ifelse(is.na(Active.Players..87.) == FALSE, Active.Players..87,
ifelse(is.na(Active.Players..89.) == FALSE, Active.Players..89.,
ifelse(is.na(Active.Players..90) == FALSE, Active.Players..90., Active.Players..91.)))))) %>%
mutate(player_name = gsub("^[^[:space:]]+\\s+", "", name))
nfl_player_data <- bind_rows(lapply(names(Actives), function(sublist_name) {
data.frame(Sublist = sublist_name, Actives[[sublist_name]], row.names = NULL)})) %>%
mutate(name = ifelse(is.na(Active.Players..88.)==FALSE, Active.Players..88.,
ifelse(is.na(Active.Players..32.) == FALSE, Active.Players..32.,
ifelse(is.na(Active.Players..87.) == FALSE, Active.Players..87,
ifelse(is.na(Active.Players..89.) == FALSE, Active.Player.s..89.,
ifelse(is.na(Active.Players..90) == FALSE, Active.Players..90., Active.Players..91.)))))) %>%
mutate(player_name = gsub("^[^[:space:]]+\\s+", "", name))
nfl_player_data <- bind_rows(lapply(names(Actives), function(sublist_name) {
data.frame(Sublist = sublist_name, Actives[[sublist_name]], row.names = NULL)})) %>%
mutate(name = ifelse(is.na(Active.Players..88.)==FALSE, Active.Players..88.,
ifelse(is.na(Active.Players..32.) == FALSE, Active.Players..32.,
ifelse(is.na(Active.Players..87.) == FALSE, Active.Players..87.,
ifelse(is.na(Active.Players..89.) == FALSE, Active.Player.s..89.,
ifelse(is.na(Active.Players..90) == FALSE, Active.Players..90., Active.Players..91.)))))) %>%
mutate(player_name = gsub("^[^[:space:]]+\\s+", "", name))
nfl_player_data <- bind_rows(lapply(names(Actives), function(sublist_name) {
data.frame(Sublist = sublist_name, Actives[[sublist_name]], row.names = NULL)})) %>%
mutate(name = ifelse(is.na(Active.Players..88.)==FALSE, Active.Players..88.,
ifelse(is.na(Active.Players..32.) == FALSE, Active.Players..32.,
ifelse(is.na(Active.Players..87.) == FALSE, Active.Players..87.,
ifelse(is.na(Active.Players..89.) == FALSE, Active.Players..89.,
ifelse(is.na(Active.Players..90) == FALSE, Active.Players..90., Active.Players..91.)))))) %>%
mutate(player_name = gsub("^[^[:space:]]+\\s+", "", name))
nfl_player_data <- bind_rows(lapply(names(Actives), function(sublist_name) {
data.frame(Sublist = sublist_name, Actives[[sublist_name]], row.names = NULL)})) %>%
mutate(name = ifelse(is.na(Active.Players..88.)==FALSE, Active.Players..88.,
ifelse(is.na(Active.Players..32.) == FALSE, Active.Players..32.,
ifelse(is.na(Active.Players..87.) == FALSE, Active.Players..87.,
ifelse(is.na(Active.Players..89.) == FALSE, Active.Players..89.,
ifelse(is.na(Active.Players..90.) == FALSE, Active.Players..90., Active.Players..91.)))))) %>%
mutate(player_name = gsub("^[^[:space:]]+\\s+", "", name))
View(nfl_player_data)
qb <- nfl_player_data %>%
filter(Pos. == 'QB')
nfl_player_data <- bind_rows(lapply(names(Actives), function(sublist_name) {
data.frame(Sublist = sublist_name, Actives[[sublist_name]], row.names = NULL)})) %>%
mutate(name = ifelse(is.na(Active.Players..88.)==FALSE, Active.Players..88.,
ifelse(is.na(Active.Players..32.) == FALSE, Active.Players..32.,
ifelse(is.na(Active.Players..87.) == FALSE, Active.Players..87.,
ifelse(is.na(Active.Players..89.) == FALSE, Active.Players..89.,
ifelse(is.na(Active.Players..90.) == FALSE, Active.Players..90., Active.Players..91.)))))) %>%
mutate(player_name = gsub("^[^[:space:]]+\\s+", "", name)) %>%
select(player_name, position = Pos., Cap.Hit., Base.Salary, Signing.Bonus, Roster.Bonus, Option.Bonus, Workout.Bonus, Restruct..Bonus, Misc.,
Dead.Cap, Cap.Hit.1, Cap.)
nfl_player_data <- bind_rows(lapply(names(Actives), function(sublist_name) {
data.frame(Sublist = sublist_name, Actives[[sublist_name]], row.names = NULL)})) %>%
mutate(name = ifelse(is.na(Active.Players..88.)==FALSE, Active.Players..88.,
ifelse(is.na(Active.Players..32.) == FALSE, Active.Players..32.,
ifelse(is.na(Active.Players..87.) == FALSE, Active.Players..87.,
ifelse(is.na(Active.Players..89.) == FALSE, Active.Players..89.,
ifelse(is.na(Active.Players..90.) == FALSE, Active.Players..90., Active.Players..91.)))))) %>%
mutate(player_name = gsub("^[^[:space:]]+\\s+", "", name)) %>%
select(player_name, position = Pos., Cap.Hit., Base.Salary, Signing.Bonus, Roster.Bonus, Option.Bonus, Workout.Bonus, Restruct..Bonus, Misc.,
Dead.Cap, Cap.Hit.1, Cap..)
nfl_player_data <- bind_rows(lapply(names(Actives), function(sublist_name) {
data.frame(Sublist = sublist_name, Actives[[sublist_name]], row.names = NULL)})) %>%
mutate(name = ifelse(is.na(Active.Players..88.)==FALSE, Active.Players..88.,
ifelse(is.na(Active.Players..32.) == FALSE, Active.Players..32.,
ifelse(is.na(Active.Players..87.) == FALSE, Active.Players..87.,
ifelse(is.na(Active.Players..89.) == FALSE, Active.Players..89.,
ifelse(is.na(Active.Players..90.) == FALSE, Active.Players..90., Active.Players..91.)))))) %>%
mutate(player_name = gsub("^[^[:space:]]+\\s+", "", name)) %>%
select(player_name, position = Pos., Cap.Hit, Base.Salary, Signing.Bonus, Roster.Bonus, Option.Bonus, Workout.Bonus, Restruct..Bonus, Misc.,
Dead.Cap, Cap.Hit.1, Cap..)
nfl_player_data <- bind_rows(lapply(names(Actives), function(sublist_name) {
data.frame(Sublist = sublist_name, Actives[[sublist_name]], row.names = NULL)})) %>%
mutate(name = ifelse(is.na(Active.Players..88.)==FALSE, Active.Players..88.,
ifelse(is.na(Active.Players..32.) == FALSE, Active.Players..32.,
ifelse(is.na(Active.Players..87.) == FALSE, Active.Players..87.,
ifelse(is.na(Active.Players..89.) == FALSE, Active.Players..89.,
ifelse(is.na(Active.Players..90.) == FALSE, Active.Players..90., Active.Players..91.)))))) %>%
mutate(player_name = gsub("^[^[:space:]]+\\s+", "", name)) %>%
select(player_name, position = Pos., Cap.Hit, Base.Salary, Signing.Bonus, Roster.Bonus, Option.Bonus, Workout.Bonus, Restruc..Bonus, Misc.,
Dead.Cap, Cap.Hit.1, Cap..)
View(nfl_player_data)
mutate(player_name = gsub("^[^[:space:]]+\\s+", "", name)) %>%
select(player_name, position = Pos., Cap.Hit, Base.Salary, Signing.Bonus, Roster.Bonus, Option.Bonus, Workout.Bonus, Restruc..Bonus, Misc.,
Dead.Cap, Cap.Hit.1, cap_pct = Cap..)
nfl_player_data <- bind_rows(lapply(names(Actives), function(sublist_name) {
data.frame(Sublist = sublist_name, Actives[[sublist_name]], row.names = NULL)})) %>%
mutate(name = ifelse(is.na(Active.Players..88.)==FALSE, Active.Players..88.,
ifelse(is.na(Active.Players..32.) == FALSE, Active.Players..32.,
ifelse(is.na(Active.Players..87.) == FALSE, Active.Players..87.,
ifelse(is.na(Active.Players..89.) == FALSE, Active.Players..89.,
ifelse(is.na(Active.Players..90.) == FALSE, Active.Players..90., Active.Players..91.)))))) %>%
mutate(player_name = gsub("^[^[:space:]]+\\s+", "", name)) %>%
select(player_name, position = Pos., Cap.Hit, Base.Salary, Signing.Bonus, Roster.Bonus, Option.Bonus, Workout.Bonus, Restruc..Bonus, Misc.,
Dead.Cap, Cap.Hit.1, cap_pct = Cap..)
nfl_player_data <- bind_rows(lapply(names(Actives), function(sublist_name) {
data.frame(Sublist = sublist_name, Actives[[sublist_name]], row.names = NULL)})) %>%
mutate(name = ifelse(is.na(Active.Players..88.)==FALSE, Active.Players..88.,
ifelse(is.na(Active.Players..32.) == FALSE, Active.Players..32.,
ifelse(is.na(Active.Players..87.) == FALSE, Active.Players..87.,
ifelse(is.na(Active.Players..89.) == FALSE, Active.Players..89.,
ifelse(is.na(Active.Players..90.) == FALSE, Active.Players..90., Active.Players..91.)))))) %>%
mutate(player_name = gsub("^[^[:space:]]+\\s+", "", name)) %>%
select(player_name, position = Pos., Cap.Hit, Base.Salary, Signing.Bonus, Roster.Bonus, Option.Bonus, Workout.Bonus, Restruc..Bonus, Misc.,
Dead.Cap, Cap.Hit.1, cap_pct = as.numeric(Cap..))
nfl_player_data <- bind_rows(lapply(names(Actives), function(sublist_name) {
data.frame(Sublist = sublist_name, Actives[[sublist_name]], row.names = NULL)})) %>%
mutate(name = ifelse(is.na(Active.Players..88.)==FALSE, Active.Players..88.,
ifelse(is.na(Active.Players..32.) == FALSE, Active.Players..32.,
ifelse(is.na(Active.Players..87.) == FALSE, Active.Players..87.,
ifelse(is.na(Active.Players..89.) == FALSE, Active.Players..89.,
ifelse(is.na(Active.Players..90.) == FALSE, Active.Players..90., Active.Players..91.)))))) %>%
mutate(player_name = gsub("^[^[:space:]]+\\s+", "", name),
Cap.. = as.numeric(Cap..)) %>%
select(player_name, position = Pos., Cap.Hit, Base.Salary, Signing.Bonus, Roster.Bonus, Option.Bonus, Workout.Bonus, Restruc..Bonus, Misc.,
Dead.Cap, Cap.Hit.1, cap_pct = Cap..)
View(nfl_player_data)
position_value <- nfl_player_data %>%
group_by(position) %>%
summarize(avg_cap_hit = mean(cap_pct)) %>%
arrange(desc(avg_cap_hit))
View(position_value)
position_value <- nfl_player_data %>%
filter(cap_pact > 1.0) %>%
group_by(position) %>%
summarize(avg_cap_hit = mean(cap_pct)) %>%
arrange(desc(avg_cap_hit))
position_value <- nfl_player_data %>%
filter(cap_pact > 1) %>%
group_by(position) %>%
summarize(avg_cap_hit = mean(cap_pct)) %>%
arrange(desc(avg_cap_hit))
position_value <- nfl_player_data %>%
filter(cap_pct > 1) %>%
group_by(position) %>%
summarize(avg_cap_hit = mean(cap_pct)) %>%
arrange(desc(avg_cap_hit))
nfl_player_data <- bind_rows(lapply(names(Actives), function(sublist_name) {
data.frame(Sublist = sublist_name, Actives[[sublist_name]], row.names = NULL)})) %>%
mutate(name = ifelse(is.na(Active.Players..88.)==FALSE, Active.Players..88.,
ifelse(is.na(Active.Players..32.) == FALSE, Active.Players..32.,
ifelse(is.na(Active.Players..87.) == FALSE, Active.Players..87.,
ifelse(is.na(Active.Players..89.) == FALSE, Active.Players..89.,
ifelse(is.na(Active.Players..90.) == FALSE, Active.Players..90., Active.Players..91.)))))) %>%
mutate(player_name = gsub("^[^[:space:]]+\\s+", "", name),
Cap.. = as.numeric(Cap..),
Cap.Hit = as.numeric(gsub("[\\$,]", "", Cap.Hit))) %>%
select(player_name, position = Pos., Cap.Hit, Base.Salary, Signing.Bonus, Roster.Bonus, Option.Bonus, Workout.Bonus, Restruc..Bonus, Misc.,
Dead.Cap, Cap.Hit.1, cap_pct = Cap..)
position_value <- nfl_player_data %>%
filter(cap_pct > 1) %>%
group_by(position) %>%
summarize(total_cap_hit = sum(Cap.Hit)) %>%
arrange(desc(total_cap_hit))
